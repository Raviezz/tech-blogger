{"version":3,"sources":["components/feed-tag.js","components/common-components/intro-util.js","components/intro.js","components/display-feeds.js","components/feed.js","components/editor.js","components/create-feed.js","components/home.js","App.js","serviceWorker.js","index.js"],"names":["FeedDisplayCard","props","Box","display","justifyContent","padding","flexWrap","Typography","variant","color","this","feed","to","className","React","Component","Centered","align","children","OutlinedButtonLink","href","link","text","Intro","style","fontSize","marginBottom","DisplayFeeds","PanelGroup","accordion","Panel","header","Feed","match","params","id","FeedEditor","onChange","editorState","contentState","getCurrentContent","console","log","convertToRaw","saveContent","setState","debounce","content","window","localStorage","setItem","JSON","stringify","_getLengthOfSelectedText","currentSelection","state","getSelection","length","isCollapsed","currentContent","startKey","getStartKey","endKey","getEndKey","startBlock","getIsBackward","getBlockMap","getBlockForKey","endBlock","isStartAndEndBlockAreTheSame","startBlockTextLength","getLength","startSelectedTextLength","getStartOffset","endSelectedTextLength","getEndOffset","keyAfterEnd","getKeyAfter","currentKey","_handleBeforeInput","getPlainText","MAX_LENGTH","_handlePastedText","pastedText","currentContentLength","selectedTextLength","EditorState","createEmpty","alignment","bind","focus","refs","editor","handleKeyCommand","command","_handleKeyCommand","onTab","e","_onTab","toggleBlockType","type","_toggleBlockType","toggleInlineStyle","_toggleInlineStyle","newState","RichUtils","blockType","inlineStyle","hasText","first","getType","styles","root","Grid","ToggleButtonGroup","size","exclusive","onToggle","onClick","blockStyleFn","getBlockStyle","placeholder","ref","spellCheck","fontFamily","width","borderTop","cursor","marginTop","minHeight","paddingTop","controls","userSelect","styleButton","marginRight","styleButtonActive","backgroundColor","green","block","StyleButton","preventDefault","active","ToggleButton","key","label","onMouseDown","BLOCK_TYPES","BlockStyleControls","selection","map","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","useStyles","makeStyles","theme","textField","marginLeft","spacing","LayoutTextFields","Divider","TextField","margin","helperText","fullWidth","InputLabelProps","shrink","handleBeforeInput","handlePastedText","Button","headerStyles","height","whiteSpace","overflow","contentStyle","NavToggle","expand","Navbar","appearance","Body","Nav","pullRight","Item","textAlign","Icon","icon","HomePage","handleToggle","Container","Header","Content","path","exact","component","Sidebar","flexDirection","collapsible","Sidenav","verticalAlign","expanded","defaultOpenKeys","eventKey","App","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.72b826e6.chunk.js","sourcesContent":["import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Row from 'react-bootstrap/Row';\r\nimport '../styles/feed-display.css'\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class FeedDisplayCard extends React.Component{\r\n    constructor(props){\r\n        super();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n           <Box\r\n           display=\"flex\"\r\n           justifyContent=\"space-between\"\r\n           padding=\"8\"\r\n           flexWrap=\"nowrap\"\r\n           >\r\n                   <Typography variant=\"subtitle1\" color=\"#38ef7d\">\r\n                    {this.props.feed}  sub title\r\n                    </Typography>\r\n                    <Link to={`/feed/${this.props.feed}`}>\r\n                    <a className=\"view-more\" >view</a>\r\n                    </Link>\r\n            </Box>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport './intro-util.css';\r\n\r\nexport function Centered(props) {\r\n    return (\r\n        <div align={\"center\"}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function OutlinedButtonLink(props) {\r\n    return (\r\n        <div>\r\n            <a className={\"outlinedButtonLink\"} href={props.link}>{props.text}</a>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {Centered, OutlinedButtonLink} from './common-components/intro-util';\r\n\r\nexport default class Intro extends React.Component{\r\n    constructor(props){\r\n        super();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <Centered>\r\n                <div style={{fontSize: 22, marginBottom: 100}}>\r\n                <p>This blogger is maintained by two geeks who did their phd in machine learning.\r\n                    Articles from this site gives u immerse knowledge and more practical.\r\n                    Please share it to your friends if you feel good.\r\n                    <br/><br/>\r\n                </p>\r\n                    <OutlinedButtonLink  text={\"Know More\"}/>\r\n                </div>\r\n            </Centered>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\nimport {PanelGroup,Panel} from 'rsuite';\r\nimport FeedDisplayCard from './feed-tag';\r\nimport Intro from './intro';\r\n\r\nfunction DisplayFeeds() {\r\n    return (\r\n        <div>\r\n            <Intro />\r\n            <PanelGroup accordion>\r\n            <Panel header=\"Feed 1\" >\r\n             <FeedDisplayCard feed={\"feed 1\"} />\r\n            </Panel>\r\n            <Panel header=\"Feed 2\">\r\n            <FeedDisplayCard feed={\"feed 2\"} />\r\n            </Panel>\r\n            <Panel header=\"Feed 3\">\r\n            <FeedDisplayCard feed={\"feed 3\"} />\r\n            </Panel>\r\n          </PanelGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DisplayFeeds;","import React from 'react';\r\n//import Typography from '@material-ui/core/Typography';\r\n\r\nfunction Feed({match}) {\r\n    return (\r\n        <div>\r\n            <h1>{match.params.id}</h1>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Feed;","import React, { Component } from 'react';\r\nimport 'draft-js/dist/Draft.css';\r\nimport debounce from 'lodash/debounce';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport Box from '@material-ui/core/Box';\r\nimport {\r\n  Editor, \r\n  EditorState,\r\n  RichUtils,\r\n  convertToRaw\r\n} from 'draft-js';\r\nimport { green } from '@material-ui/core/colors';\r\nimport '../styles/feed-editor.css';\r\n\r\nconst MAX_LENGTH = 10;\r\n\r\n class FeedEditor extends React.Component {\r\n        constructor(props) {\r\n          super(props);\r\n          this.state = {\r\n            editorState: EditorState.createEmpty(),\r\n            alignment: 'left'\r\n          };\r\n\r\n          this.onChange = this.onChange.bind(this);\r\n          this._getLengthOfSelectedText = this._getLengthOfSelectedText.bind(this);\r\n          this._handleBeforeInput = this._handleBeforeInput.bind(this);\r\n\r\n          this.focus = () => this.refs.editor.focus();\r\n         \r\n          this.handleKeyCommand = (command) => this._handleKeyCommand(command);\r\n          this.onTab = (e) => this._onTab(e);\r\n          this.toggleBlockType = (type) => this._toggleBlockType(type);\r\n          this.toggleInlineStyle = (style) => this._toggleInlineStyle(style);\r\n        }\r\n\r\n        onChange = (editorState) => {\r\n          const contentState = editorState.getCurrentContent();\r\n          console.log('content state', convertToRaw(contentState));\r\n           this.saveContent(contentState);\r\n          this.setState({editorState});\r\n        }\r\n\r\n\r\n\r\n        saveContent = debounce((content) => {\r\nwindow.localStorage.setItem('content',JSON.stringify((convertToRaw(content))));\r\n        }, 1000);\r\n\r\n        // saveContent = (content) => {\r\n        //   window.localStorage.setItem('content', JSON.stringify(convertToRaw(content)));\r\n        // }\r\n\r\n\r\n      _getLengthOfSelectedText = () => {\r\n\r\n        console.log('say');\r\n  \tconst currentSelection = this.state.editorState.getSelection();\r\n    const isCollapsed = currentSelection.isCollapsed();\r\n   \r\n    let length = 0;\r\n    \r\n    if (!isCollapsed) {\r\n      const currentContent = this.state.editorState.getCurrentContent();\r\n      const startKey = currentSelection.getStartKey();\r\n      const endKey = currentSelection.getEndKey();\r\n      const isBackward = currentSelection.getIsBackward();\r\n    \tconst blockMap = currentContent.getBlockMap();\r\n      const startBlock = currentContent.getBlockForKey(startKey);\r\n      const endBlock = currentContent.getBlockForKey(endKey);\r\n      const isStartAndEndBlockAreTheSame = startKey === endKey;\r\n      const startBlockTextLength = startBlock.getLength();\r\n      const endBlockTextLength = endBlock.getLength();\r\n      const startSelectedTextLength = startBlockTextLength - currentSelection.getStartOffset();\r\n      const endSelectedTextLength = currentSelection.getEndOffset();\r\n      const keyAfterEnd = currentContent.getKeyAfter(endKey);\r\n      \r\n      if (isStartAndEndBlockAreTheSame) {\r\n      \tlength += currentSelection.getEndOffset() - currentSelection.getStartOffset();\r\n      } else {\r\n      \tlet currentKey = startKey;\r\n        while (currentKey && currentKey !== keyAfterEnd) {\r\n \t\t\t\t\tif (currentKey === startKey) {\r\n          \tlength += startSelectedTextLength + 1;\r\n          } else if (currentKey === endKey) {\r\n            length += endSelectedTextLength;\r\n          } else {\r\n          \tlength += currentContent.getBlockForKey(currentKey).getLength() + 1;\r\n          }\r\n\r\n          currentKey = currentContent.getKeyAfter(currentKey);\r\n        };\r\n      }\r\n    }\r\n    \r\n    return length;\r\n  }\r\n\r\n  _handleBeforeInput = () => {\r\n  \tconst currentContent = this.state.editorState.getCurrentContent();\r\n    const currentContentLength = currentContent.getPlainText('').length\r\n\r\n  \tif (currentContentLength > MAX_LENGTH - 1) {\r\n    \tconsole.log('you can type max ten characters');\r\n\r\n    \treturn 'handled';\r\n    }\r\n  }\r\n  \r\n  _handlePastedText = (pastedText) => {\r\n  \tconst currentContent = this.state.editorState.getCurrentContent();\r\n    const currentContentLength = currentContent.getPlainText('').length;\r\n    const selectedTextLength = this._getLengthOfSelectedText();\r\n\r\n  \tif (currentContentLength + pastedText.length - selectedTextLength > MAX_LENGTH) {\r\n    \tconsole.log('you can type max ten characters');\r\n\r\n    \treturn 'handled';\r\n    }\r\n  } \r\n\r\n        _handleKeyCommand(command) {\r\n          const {editorState} = this.state;\r\n          const newState = RichUtils.handleKeyCommand(editorState, command);\r\n          if (newState) {\r\n            this.onChange(newState);\r\n            return true;\r\n          }\r\n          return false;\r\n        }\r\n\r\n        _onTab(e) {\r\n          const maxDepth = 4;\r\n          this.onChange(RichUtils.onTab(e, this.state.editorState, maxDepth));\r\n        }\r\n\r\n        _toggleBlockType(blockType) {\r\n          this.onChange(\r\n            RichUtils.toggleBlockType(\r\n              this.state.editorState,\r\n              blockType\r\n            )\r\n          );\r\n        }\r\n\r\n        _toggleInlineStyle(inlineStyle) {\r\n          this.onChange(\r\n            RichUtils.toggleInlineStyle(\r\n              this.state.editorState,\r\n              inlineStyle\r\n            )\r\n          );\r\n        }\r\n\r\n        render() {\r\n          const {editorState} = this.state;\r\n          let className = 'RichEditor-editor';\r\n          var contentState = editorState.getCurrentContent();\r\n          if (!contentState.hasText()) {\r\n            if (contentState.getBlockMap().first().getType() !== 'unstyled') {\r\n              className += ' RichEditor-hidePlaceholder';\r\n            }\r\n          }\r\n\r\n\r\nif (!this.state.editorState) {\r\n      return (\r\n        <h3 className=\"loading\">Loading...</h3>\r\n      );\r\n    }\r\n    return (\r\n      <div style={styles.root}>\r\n \r\n            <Grid>\r\n                <Box\r\n                display = \"flex\"\r\n                justifyContent = \"space-even\"\r\n                >\r\n        <ToggleButtonGroup size=\"small\"  exclusive >              \r\n        <BlockStyleControls\r\n                editorState={editorState}\r\n                onToggle={this.toggleBlockType}\r\n              />\r\n             \r\n              \r\n               <InlineStyleControls\r\n                editorState={editorState}\r\n                onToggle={this.toggleInlineStyle}\r\n              /> \r\n             </ToggleButtonGroup>\r\n              </Box>\r\n              <div style={styles.editor} onClick={this.focus}>\r\n                <Editor\r\n                  blockStyleFn={getBlockStyle}\r\n                  editorState={editorState}\r\n                  handleKeyCommand={this.handleKeyCommand}\r\n                  onChange={this.onChange}\r\n                  onTab={this.onTab}\r\n                  placeholder=\"Start here..\"\r\n                  ref=\"editor\"\r\n                  spellCheck={true}\r\n                />\r\n              </div>\r\n              </Grid>\r\n            \r\n      </div>\r\n    );\r\n\r\n        }\r\n      }\r\n\r\n      const styles = {\r\n        root: {\r\n          fontFamily: '\\'Georgia\\', serif',\r\n          fontSize: 14,\r\n          padding: 20,\r\n          width: 600,\r\n        },\r\n        editor: {\r\n          borderTop: '1px solid #ddd',\r\n          cursor: 'text',\r\n          fontSize: 16,\r\n          marginTop: 20,\r\n          minHeight: 400,\r\n          paddingTop: 20,\r\n        },\r\n        controls: {\r\n          fontFamily: '\\'Helvetica\\', sans-serif',\r\n          fontSize: 14,\r\n          marginBottom: 10,\r\n          userSelect: 'none',\r\n        },\r\n        styleButton: {\r\n          color: '#999',\r\n          cursor: 'pointer',\r\n          marginRight: 16,\r\n          padding: '2px 0',\r\n        },\r\n        styleButtonActive: {\r\n          color: '#999',\r\n          backgroundColor: green,\r\n          cursor: 'pointer',\r\n          marginRight: 16,\r\n          padding: '2px 0',\r\n        },\r\n      };\r\n\r\n      function getBlockStyle(block) {\r\n        switch (block.getType()) {\r\n          case 'blockquote': return 'RichEditor-blockquote';\r\n          default: return null;\r\n        }\r\n      }\r\n\r\n\r\n\r\nclass StyleButton extends React.Component {\r\n        constructor() {\r\n          super();\r\n          this.onToggle = (e) => {\r\n            e.preventDefault();\r\n            this.props.onToggle(this.props.style);\r\n          };\r\n        }\r\n\r\n        render() {\r\n          let className = 'RichEditor-styleButton ui button';\r\n          if (this.props.active) {\r\n            className += 'RichEditor-activeButton';\r\n          }\r\n\r\n          return (\r\n            <ToggleButton key={this.props.label} className={className} onMouseDown={this.onToggle}>\r\n              {this.props.label}\r\n            </ToggleButton>\r\n          );\r\n        }\r\n      }\r\n\r\n const BLOCK_TYPES = [\r\n        {label: 'H1', style: 'header-one'},\r\n        {label: 'H2', style: 'header-two'},\r\n        {label: 'H3', style: 'header-three'},\r\n        {label: 'H4', style: 'header-four'},\r\n        {label: 'H5', style: 'header-five'},\r\n        {label: 'H6', style: 'header-six'},\r\n        {label: 'Blockquote', style: 'blockquote'},\r\n        {label: 'UL', style: 'unordered-list-item'},\r\n        {label: 'OL', style: 'ordered-list-item'},\r\n        {label: 'CodeBlock', style: 'code-block'},\r\n      ];\r\n\r\n\r\n\r\n const BlockStyleControls = (props) => {\r\n        const {editorState} = props;\r\n        const selection = editorState.getSelection();\r\n        const blockType = editorState\r\n          .getCurrentContent()\r\n          .getBlockForKey(selection.getStartKey())\r\n          .getType();\r\n\r\n        return (\r\n          <div className=\"controls\">\r\n            {BLOCK_TYPES.map((type) =>\r\n              <StyleButton\r\n                key={type.label}\r\n                active={type.style === blockType}\r\n                label={type.label}\r\n                onToggle={props.onToggle}\r\n                style={type.style}\r\n              />\r\n            )}\r\n          </div>\r\n        );\r\n      };\r\n\r\n\r\n var INLINE_STYLES = [\r\n        {label: 'Bold', style: 'BOLD'},\r\n        {label: 'Italic', style: 'ITALIC'},\r\n        {label: 'Underline', style: 'UNDERLINE'},\r\n        {label: 'Monospace', style: 'CODE'},\r\n      ];\r\n\r\n\r\n\r\nconst InlineStyleControls = (props) => {\r\n        var currentStyle = props.editorState.getCurrentInlineStyle();\r\n        return (\r\n          <div className=\"controls\">\r\n            {INLINE_STYLES.map(type =>\r\n              <StyleButton\r\n                key={type.label}\r\n                active={currentStyle.has(type.style)}\r\n                label={type.label}\r\n                onToggle={props.onToggle}\r\n                style={type.style}\r\n              />\r\n            )}\r\n          </div>\r\n        );\r\n      };\r\n\r\n\r\n\r\n      export default FeedEditor;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport 'draft-js/dist/Draft.css';\r\nimport FeedEditor from './editor';\r\nimport {Divider} from 'rsuite';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: '25ch',\r\n  },\r\n}));\r\n\r\nexport default class LayoutTextFields extends React.Component {\r\n  constructor(props){\r\n      super();\r\n      this.state={\r\n\r\n      }\r\n  }\r\n  render() {\r\n      return (\r\n        <div className={useStyles.root}>\r\n          <Typography variant=\"h6\" color=\"\">Create Feed</Typography>\r\n          <Divider />\r\n            <TextField\r\n              id=\"standard-full-width\"\r\n              label=\"Title\"\r\n              style={{ margin: 5 }}\r\n              placeholder=\"feed title\"\r\n              helperText=\"Main title\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            <Divider />\r\n            <Typography variant=\"h6\" color=\"\">Feed Description</Typography>\r\n            <FeedEditor \r\n             editorState={this.state.editorState}\r\n             onChange={this.onChange}\r\n             handleBeforeInput={this._handleBeforeInput}\r\n             handlePastedText={this._handlePastedText}\r\n            />\r\n        <Button variant=\"contained\">submit</Button>\r\n          </div>\r\n      );\r\n  } \r\n}\r\n","import React from 'react';\r\nimport {Sidenav, Nav,Navbar,PanelGroup,Icon,Container,Sidebar,Header,Content,Divider,Panel} from 'rsuite';\r\nimport DisplayFeeds from './display-feeds';\r\nimport {BrowserRouter as Router,Switch, Route} from 'react-router-dom';\r\nimport Feed from './feed';\r\nimport LayoutTextFields from './create-feed';\r\nimport {Link} from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport '../styles/home.css';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nconst headerStyles = {\r\n    padding: 18,\r\n    fontSize: 16,\r\n    height: 56,\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    color: \"#004d40\",\r\n    backgroundColor: \"#004d40\"\r\n  };\r\n  \r\n  const iconStyles = {\r\n    width: 56,\r\n    height: 56,\r\n    lineHeight: '56px',\r\n    textAlign: 'center'\r\n  };\r\n\r\n  const contentStyle = {\r\n    padding: 10,\r\n  }\r\n  \r\n  const NavToggle = ({ expand, onChange }) => {\r\n    return (\r\n      <Navbar appearance=\"subtle\" className=\"nav-toggle\">\r\n        <Navbar.Body>\r\n          <Nav pullRight>\r\n            <Nav.Item onClick={onChange} style={{ width: 56, textAlign: 'center' }}>\r\n              <Icon icon={expand ? 'angle-left' : 'angle-right'} />\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Navbar.Body>\r\n      </Navbar>\r\n    );\r\n  };\r\n  \r\nexport default class HomePage extends React.Component {\r\n   constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expand: false\r\n    };\r\n    this.handleToggle = this.handleToggle.bind(this);\r\n  }\r\n  handleToggle() {\r\n    this.setState({\r\n      expand: !this.state.expand\r\n    });\r\n  }\r\n  render() {\r\n    const { expand } = this.state;\r\n    return (\r\n      <div className=\"show-fake-browser sidebar-page\">\r\n        <Container>\r\n        <Router>\r\n        <Container>\r\n        \r\n            <Header>\r\n            <div className={\"btn-place\"}>\r\n            <Button variant=\"contained\" href='/' className={\"button-blogger\"}\r\n              >\r\n              BLOGGER\r\n            </Button> </div>  \r\n            \r\n            </Header>\r\n            \r\n            <Divider />\r\n            \r\n             \r\n            <Content style={contentStyle}>\r\n           \r\n              <Switch>\r\n                <Route path='/create' exact component={LayoutTextFields} />\r\n              <Route path='/feed/:id' exact component={Feed}  />\r\n              <Route path='/'  component={DisplayFeeds}  />\r\n             \r\n              </Switch>\r\n             \r\n            </Content>\r\n           \r\n          </Container>\r\n          <Sidebar\r\n            style={{ display: 'flex', flexDirection: 'column' }}\r\n            width={expand ? 260 : 56}\r\n            collapsible\r\n          >\r\n            <Sidenav.Header>\r\n              <div style={headerStyles} className={\"nav-slider\"}>\r\n                <Icon icon=\"list\" size=\"lg\" style={{ verticalAlign: 0 }} />\r\n                <span style={{ marginLeft: 12 }}> BRAND</span>\r\n              </div>\r\n            </Sidenav.Header>\r\n            <Sidenav\r\n              expanded={expand}\r\n              defaultOpenKeys={['3']}\r\n              appearance=\"subtle\"\r\n            >\r\n              <Sidenav.Body>\r\n                <Nav>\r\n                  <Nav.Item eventKey=\"1\" icon={<Icon icon=\"dashboard\" />}>\r\n                    HOME\r\n                  </Nav.Item>\r\n                  <Link to={'/create'}>\r\n                  <Nav.Item eventKey=\"2\" icon={<Icon icon=\"group\" />}>\r\n                   My Blogs\r\n                  </Nav.Item>\r\n                  </Link>\r\n                </Nav>\r\n              </Sidenav.Body>\r\n            </Sidenav>\r\n            <NavToggle expand={expand} onChange={this.handleToggle} />\r\n          </Sidebar>\r\n\r\n          </Router>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport HomePage from './components/home';\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\nfunction App() {\r\n  return (\r\n    <HomePage />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}